import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { cookies } from "next/headers";
import "./globals.css";
import { decrypt } from "./lib/encryption";
import { SessionProvider } from "./components/SessionProvider";
import { Toaster } from "@/components/ui/sonner"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Access cookies server-side
  const cookieStore = await cookies();
  const sessionToken = cookieStore.get('session')?.value;
  const sessionData = sessionToken ? await decrypt(sessionToken) : null;
  
  // Parse the session data if it exists
  let parsedSessionData = null;
  if (sessionData) {
    try {
      parsedSessionData = JSON.parse(sessionData);
    } catch (error) {
      console.error('Failed to parse session data:', error);
    }
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Pass session data to children */}
        <SessionProvider sessionData={parsedSessionData}>
          {children}
        </SessionProvider>
        <Toaster />
      </body>
    </html>
  );
}
